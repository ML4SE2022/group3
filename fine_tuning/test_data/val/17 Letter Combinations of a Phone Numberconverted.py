class Solution : NEW_LINE INDENT def letterCombinations ( self , digits ) : NEW_LINE INDENT if not digits : NEW_LINE INDENT return [ ] NEW_LINE DEDENT digitToLetters = [ ' ' , ' ' , ' abc ' , ' def ' , ' ghi ' , ' jkl ' , ' mno ' , ' pqrs ' , ' tuv ' , ' wxyz ' ] NEW_LINE ans = [ ] NEW_LINE def dfs ( i : int , path ) : NEW_LINE INDENT if i == len ( digits ) : NEW_LINE INDENT ans . append ( ' ' . join ( path ) ) NEW_LINE return NEW_LINE DEDENT for letter in digitToLetters [ ord ( digits [ i ] ) - ord ( '0' ) ] : NEW_LINE INDENT path . append ( letter ) NEW_LINE dfs ( i + 1 , path ) NEW_LINE path . pop ( ) NEW_LINE DEDENT DEDENT dfs ( 0 , [ ] ) NEW_LINE return ans NEW_LINE DEDENT DEDENT