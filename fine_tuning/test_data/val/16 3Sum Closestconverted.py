class Solution : NEW_LINE INDENT def threeSumClosest ( self , nums : List [ int ] , target : int ) -> int : NEW_LINE INDENT ans = nums [ 0 ] + nums [ 1 ] + nums [ 2 ] NEW_LINE nums . sort ( ) NEW_LINE for i in range ( len ( nums ) - 2 ) : NEW_LINE INDENT if i > 0 and nums [ i ] == nums [ i - 1 ] : NEW_LINE INDENT continue NEW_LINE DEDENT l = i + 1 NEW_LINE r = len ( nums ) - 1 NEW_LINE while l < r : NEW_LINE INDENT summ = nums [ i ] + nums [ l ] + nums [ r ] NEW_LINE if summ == target : NEW_LINE INDENT return summ NEW_LINE DEDENT if abs ( summ - target ) < abs ( ans - target ) : NEW_LINE INDENT ans = summ NEW_LINE DEDENT if summ < target : NEW_LINE INDENT l += 1 NEW_LINE DEDENT else : NEW_LINE INDENT r -= 1 NEW_LINE DEDENT DEDENT DEDENT return ans NEW_LINE DEDENT DEDENT